# mihomo 配置
# 日期：2025-08-13
# 原作者：iKeLee
# CRUZ修改
port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://geodata.kelee.one/Country-Masaiki.mmdb'
  asn: 'https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: system
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# P2P下载端口
listeners:
- name: socks5-in-1
  type: socks
  port: 10808
  listen: 0.0.0.0
  udp: true
  users: []
  proxy: DIRECT

# DNS模块
dns:
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:ChinaMax_OCD_Domain"
    - '*.lan'
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  fallback:
  - https://1.1.1.1/dns-query   # Cloudflare
  - https://8.8.8.8/dns-query   # Google
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
  default-nameserver:
    - 221.6.4.66
    - 58.240.57.33
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - system
    - https://223.5.5.5/dns-query
    - https://doh.pub/dns-query

# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点,每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://www.google.com/blank.html', interval: 300}}

# 锚点 - 节点订阅
proxy-providers: 
  Airport1:
    url: '机场订阅链接'
    <<: *NodeParam

# 节点信息
proxies:
  - {name: 直连, type: direct}

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|HKG|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|TWN|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|JPN|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|KOR|Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|广新|狮|(\b(SG|SGP|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|USA|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|GBR|United Kingdom)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|FRA|France)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterDE: &FilterDE '^(?=.*((?i)🇩🇪|德国|(\b(DE|DEU|Germany)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterGame: &FilterGame '^(?=.*((?i)游戏|🎮|(\b(GAME)(\d+)?\b)))(?!.*((?i)回国|校园)).*$'
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|超时|收藏|福利|邀请|好友|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)(\d+)?\b|(\d{4}-\d{2}-\d{2}|\dG)))).*$'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查,容差 20ms,时延超过 2 秒判定为失败,失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查,时延超过 2 秒判定为失败,失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查,时延超过 2 秒判定为失败,失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 智选参数 [每 30 秒一次惰性健康检查,时延超过 2 秒判定为失败,失败 3 次则自动触发健康检查]
Smartselect: &Smartselect {type: smart, policy-priority: "福利:0.5;Anycast:0.65", uselightgbm: true, collectdata: true, include-all: true, interval: 30}
# 锚点 - 规则参数 [每小时更新一次订阅规则,更新规则时使用直连策略]


# 策略组
proxy-groups: 
  - {name: 🚀 节点选择, type: select, proxies: [⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选,🔧 手动选择]}
  - {name: 📹 YouTube, type: select, proxies: [🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 📺 Bilibili, type: select, proxies: [🎯 直连,⏱香港智选,⏱台湾智选]}
  - {name: 🎥 Netflix, type: select, proxies: [🚀 节点选择,🔧 手动选择,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🤖 OpenAI, type: select, proxies: [⏱美国智选,🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选]}
  - {name: 🚂 Steam, type: select, proxies: [🚀 节点选择,🎯 直连,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 📲 Telegram, type: select, proxies: [🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🎵 TikTok, type: select, proxies: [🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🍎 Apple, type: select, proxies: [🎯 直连,🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🪟 Microsoft, type: select, proxies: [🎯 直连,🚀 节点选择,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🚫 广告拦截, type: select, proxies: [REJECT,🎯 直连]}
  - {name: 🐟 漏网之鱼, type: fallback, proxies: [🚀 节点选择,🎯 直连,⏱全球智选,⏱香港智选,⏱台湾智选,⏱日本智选,⏱韩国智选,⏱新加坡智选,⏱美国智选]}
  - {name: 🎯 直连, type: select, proxies: [DIRECT]}  
  - {name: 🔧 手动选择, type: select, include-all-providers: true, filter: *FilterAll}
# 智选策略组
  - {name: ⏱香港智选, <<: *Smartselect, filter: *FilterHK}
  - {name: ⏱台湾智选, <<: *Smartselect, filter: *FilterTW}
  - {name: ⏱日本智选, <<: *Smartselect, filter: *FilterJP}
  - {name: ⏱韩国智选, <<: *Smartselect, filter: *FilterKR}
  - {name: ⏱新加坡智选, <<: *Smartselect, filter: *FilterSG}
  - {name: ⏱美国智选, <<: *Smartselect, filter: *FilterUS}
  - {name: ⏱全球智选, <<: *Smartselect, filter: *FilterAll}

# 订阅规则
rule-anchor:
  RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml}
  domain: &domain {type: http, interval: 3600, behavior: domain, format: text}
  mrsdomain: &mrsdomain {type: http, interval: 86400, behavior: domain, format: mrs}
  mrsipcidr: &mrsipcidr {type: http, interval: 86400, behavior: ipcidr, format: mrs}

rule-providers:
  Direct_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Direct_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Direct/Direct_OCD_Domain.mrs'

  adrules_OCD_Domain:
    <<: *mrsdomain
    path: './rules/adrules-mihomo.mrs'
    url: 'https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules-mihomo.mrs'

  YouTube_OCD_Domain:
    <<: *mrsdomain
    path: './rules/YouTube_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/YouTube/YouTube_OCD_Domain.mrs'

  YouTube_OCD_IP:
    <<: *mrsipcidr
    path: './rules/YouTube_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/YouTube/YouTube_OCD_IP.mrs'

  BiliBili_OCD_Domain:
    <<: *mrsdomain
    path: './rules/BiliBili_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/BiliBili/BiliBili_OCD_Domain.mrs'

  BiliBili_OCD_IP:
    <<: *mrsipcidr
    path: './rules/BiliBili_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/BiliBili/BiliBili_OCD_IP.mrs'

  OpenAI_OCD_Domain:
    <<: *mrsdomain
    path: './rules/OpenAI_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/OpenAI/OpenAI_OCD_Domain.mrs'

  OpenAI_OCD_IP:
    <<: *mrsipcidr
    path: './rules/OpenAI_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/OpenAI/OpenAI_OCD_IP.mrs'

  TikTok_OCD_Domain:
    <<: *mrsdomain
    path: './rules/TikTok_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/TikTok/TikTok_OCD_Domain.mrs'

  Steam_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Steam_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Steam/Steam_OCD_Domain.mrs'

  SteamCN_OCD_Domain:
    <<: *mrsdomain
    path: './rules/SteamCN_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/SteamCN/SteamCN_OCD_Domain.mrs'

  Netflix_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Netflix_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Netflix/Netflix_OCD_Domain.mrs'

  Netflix_OCD_IP:
    <<: *mrsipcidr
    path: './rules/Netflix_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Netflix/Netflix_OCD_IP.mrs'

  Telegram_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Telegram_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Telegram/Telegram_OCD_Domain.mrs'

  Telegram_OCD_IP:
    <<: *mrsipcidr
    path: './rules/Telegram_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Telegram/Telegram_OCD_IP.mrs'

  Apple_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Apple_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Apple/Apple_OCD_Domain.mrs'

  Apple_OCD_IP:
    <<: *mrsipcidr
    path: './rules/Apple_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Apple/Apple_OCD_IP.mrs'

  Microsoft_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Microsoft_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Microsoft/Microsoft_OCD_Domain.mrs'

  Global_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Global_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Global/Global_OCD_Domain.mrs'

  Global_OCD_IP:
    <<: *mrsipcidr
    path: './rules/Global_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Global/Global_OCD_IP.mrs'
    
  ChinaMax_OCD_Domain:
    <<: *mrsdomain
    path: './rules/ChinaMax_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/ChinaMax/ChinaMax_OCD_Domain.mrs'

  ChinaMax_OCD_IP:
    <<: *mrsipcidr
    path: './rules/ChinaMax_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/ChinaMax/ChinaMax_OCD_IP.mrs'

  Download_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Download_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Download/Download_OCD_Domain.mrs'   

  LAN_OCD_Domain:
    <<: *mrsdomain
    path: './rules/Lan_OCD_Domain.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Lan/Lan_OCD_Domain.mrs'
  
  LAN_OCD_IP:
    <<: *mrsipcidr
    path: './rules/Lan_OCD_IP.mrs'
    url: 'https://github.com/cruz0407/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Lan/Lan_OCD_IP.mrs'


# 规则指向
rules:
  ### 非 IP 类规则
  - RULE-SET, Direct_OCD_Domain, 🎯 直连
  - RULE-SET, adrules_OCD_Domain, 🚫 广告拦截
  - RULE-SET, YouTube_OCD_Domain, 📹 YouTube
  - RULE-SET, BiliBili_OCD_Domain, 📺 Bilibili
  - RULE-SET, OpenAI_OCD_Domain, 🤖 OpenAI
  - RULE-SET, TikTok_OCD_Domain, 🎵 TikTok
  - RULE-SET, Steam_OCD_Domain, 🚂 Steam
  - RULE-SET, SteamCN_OCD_Domain, 🎯 直连
  - RULE-SET, Netflix_OCD_Domain, 🎥 Netflix
  - RULE-SET, Telegram_OCD_Domain, 📲 Telegram
  - RULE-SET, Apple_OCD_Domain, 🍎 Apple
  - RULE-SET, Microsoft_OCD_Domain, 🪟 Microsoft
  - RULE-SET, Global_OCD_Domain, 🚀 节点选择
  - RULE-SET, ChinaMax_OCD_Domain, 🎯 直连
  - RULE-SET, Download_OCD_Domain, 🎯 直连
  - RULE-SET, LAN_OCD_Domain, 🎯 直连

    ### IP 类规则
  - RULE-SET, YouTube_OCD_IP, 📹 YouTube,no-resolve
  - RULE-SET, BiliBili_OCD_IP, 📺 Bilibili,no-resolve
  - RULE-SET, OpenAI_OCD_IP, 🤖 OpenAI,no-resolve
  - RULE-SET, Netflix_OCD_IP, 🎥 Netflix,no-resolve
  - RULE-SET, Telegram_OCD_IP, 📲 Telegram,no-resolve
  - RULE-SET, Apple_OCD_IP, 🍎 Apple,no-resolve
  - RULE-SET, Global_OCD_IP, 🚀 节点选择,no-resolve
  - RULE-SET, ChinaMax_OCD_IP, 🎯 直连,no-resolve
  - RULE-SET, LAN_OCD_IP, 🎯 直连,no-resolve

  - GEOIP,CN,🎯 直连,no-resolve
  - MATCH, 🐟 漏网之鱼
